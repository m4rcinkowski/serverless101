service: serverless101

app: serverless101-app
org: tomaszmarcinkowski

frameworkVersion: '2'

# @todo lambda 1 - fetches the data only from DynamoDB (checks if it exists or is fresh enough)
# @todo lambda 1 - if condition above is not met, sends an "fetch" event to SQS
# @todo lambda 2 - triggered by SQS event; supports only 1 event in a batch - sends a request to "source" API, writes the result to DynamoDB, or returns to SQS in case of a failure.
# @todo lambda 2 - idempotent? at first, check if the data needs a refreshment?
# @todo lambda 2 - supports multiple events in a batch

provider:
  name: aws
  runtime: nodejs12.x
  environment:
    COMPANIES_TABLE: ${self:service}-${self:provider.stage}-companiesFinanceInfo
  apiGateway:
    shouldStartNameWithService: true
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.COMPANIES_TABLE}"

plugins:
  - serverless-plugin-typescript

functions:
  unreliableDataSource:
    handler: functions/dataSource.default
    events:
      - http:
          path: slow-data-source/financial-risk/{id}
          method: get
    timeout: 5
  main:
    handler: functions/financialRisk.apiCheckCompany
    events:
      - http:
          path: financial-risk/{id}
          method: get
    environment:
      SOURCE_URI: https://dn7d67kfl4.execute-api.us-east-1.amazonaws.com/dev/slow-data-source/financial-risk/{id}

resources:
  Resources:
    companies:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:provider.environment.COMPANIES_TABLE}
        AttributeDefinitions:
          - AttributeName: companyId
            AttributeType: N
        KeySchema:
          - AttributeName: companyId
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
